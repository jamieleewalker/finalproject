package music.controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import lombok.extern.slf4j.Slf4j;
import music.controller.model.ArtistData;
import music.service.MusicService;

@RestController
@RequestMapping("/music")
@Slf4j
public class MusicController {
	
	@Autowired
	private MusicService musicService;
	
	@PostMapping("/music")
	@ResponseStatus(code = HttpStatus.CREATED)
	public SongData createSong(@RequestBody SongData songData) {
		log.info("Creating Song {}", songData);
		return musicService.saveSong(songData);
	}
	
	@PutMapping("/music/{musicId}")
	public SongData updateSong(@PathVariable Long songId, @RequestBody SongData songData) {
		songData.setSongId(songId);
		log.info("Updating song {}", songData);
		return musicService.saveSong(songData);
	}
	
	@GetMapping("/song/{songId}")
	public SongData retrieveSong(@PathVariable Long songId) {
		log.info("Retrieving song with ID={}", songId);
		return musicService.retrieveSongById(songId);
	}
	
	@GetMapping("/song")
	public List<SongData> retrieveAllSong() {
		log.info("Retrieving all songs.");
		return musicService.retrieveAllSongs();
	}
	
	@DeleteMapping("/song/{songId}")
	public Map<String, String> deleteSong(@PathVariable Long songId) {
		log.info("Deleting song with ID=" + songId + ".");
		musicService.deleteSong(songId);
		
		return Map.of("message", "Song with ID=" + songId + " was deleted successfully.");
	}
}
